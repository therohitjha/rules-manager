{"version":3,"sources":["contexts/TaskListContext.js","components/Task.js","components/TaskList.js","components/TaskForm.js","components/Header.js","components/App.js","index.js"],"names":["TaskListContext","createContext","TaskListContextProvider","props","initialState","JSON","parse","localStorage","getItem","useState","tasks","setTasks","useEffect","setItem","stringify","editItem","setEditItem","Provider","value","addTask","rules","id","uuid","removeTask","filter","task","clearList","findItem","item","find","editTask","newTasks","map","children","Task","useContext","className","Object","values","key","onClick","TaskList","length","TaskForm","rent","age","address","zip","product","setRules","resetState","handleChange","e","target","name","prevData","onSubmit","preventDefault","type","placeholder","onChange","required","Header","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.68439851.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react'\nimport {v4 as uuid} from 'uuid'\n\nexport const TaskListContext = createContext()\n\nconst TaskListContextProvider = props => {\n  const initialState = JSON.parse(localStorage.getItem('tasks')) || []\n\n  const [tasks, setTasks] = useState(initialState)\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks))\n  }, [tasks])\n\n  const [editItem, setEditItem] = useState(null)\n\n  // Add tasks\n  const addTask = rules => {\n    setTasks([...tasks, { rules, id: uuid() }])\n  }\n\n  // Remove tasks\n  const removeTask = id => {\n    setTasks(tasks.filter(task => task.id !== id))\n  }\n\n  // Clear tasks\n  const clearList = () => {\n    setTasks([])\n  }\n\n  // Find task\n  const findItem = id => {\n    const item = tasks.find(task => task.id === id)\n    setEditItem(item)\n  }\n\n  // Edit task\n  const editTask = (rules, id) => {\n    const newTasks = tasks.map(task => (task.id === id ? { rules, id } : task))\n    setTasks(newTasks)\n    setEditItem(null)\n  }\n\n  return (\n    <TaskListContext.Provider\n      value={{\n        tasks,\n        addTask,\n        removeTask,\n        clearList,\n        findItem,\n        editTask,\n        editItem\n      }}\n    >\n      {props.children}\n    </TaskListContext.Provider>\n  )\n}\n\nexport default TaskListContextProvider\n","import React, { useContext } from 'react'\nimport {v4 as uuid} from 'uuid'\nimport { TaskListContext } from '../contexts/TaskListContext'\n\nconst Task = ({ task }) => {\n  const { removeTask, findItem } = useContext(TaskListContext)\n\n  return (\n    <>\n    <li className=\"list-item\">\n      {Object.values(task.rules).map((values)=>{\nreturn <span key={uuid()}>{values}</span>\n      })}\n      <div>\n        <button\n          className=\"btn-delete task-btn\"\n          onClick={() => removeTask(task.id)}\n        >\n          <i className=\"fas fa-trash-alt\"></i>\n        </button>{' '}\n        <button className=\"btn-edit task-btn\" onClick={() => findItem(task.id)}>\n          <i className=\"fas fa-pen\"></i>\n        </button>\n      </div>\n    </li>\n    </>\n  )\n}\n\nexport default Task\n","import React, { useContext } from \"react\";\nimport { TaskListContext } from \"../contexts/TaskListContext\";\nimport Task from \"./Task\";\n\nconst TaskList = () => {\n  const { tasks } = useContext(TaskListContext);\n\n  return (\n    <div>\n      {tasks.length ? (\n        <ul className=\"list\">\n          {tasks.map(task => {\n            return <Task task={task} key={task.id} />;\n          })}\n        </ul>\n      ) : (\n        <div className=\"no-tasks\">No Tasks</div>\n      )}\n    </div>\n  );\n};\n\nexport default TaskList;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { TaskListContext } from \"../contexts/TaskListContext\";\n\nconst TaskForm = () => {\n  const { addTask, clearList, editTask, editItem } = useContext(\n    TaskListContext\n  );\n  const [rules, setRules] = useState({\n    rent: \"\",\n    age: \"\",\n    address: \"\",\n    zip: \"\",\n    product: \"\",\n  });\n\n  \n  const resetState = () => {\n    setRules({ rent: \"\", age: \"\", address: \"\", zip: \"\",product: \"\" });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!editItem) {\n      addTask(rules);\n      resetState()\n    } else {\n      editTask(rules, editItem.id);\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setRules((prevData) => {\n      return { ...prevData, [name]: value };\n    });\n  };\n  \n\n  useEffect(() => {\n    if (editItem) {\n      setRules(editItem.rules);\n    } else {\n      resetState();\n    }\n  }, [editItem]);\n\n\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter Rent...\"\n        value={rules.rent}\n        name=\"rent\"\n        onChange={handleChange}\n        required\n        className=\"task-input\"\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Enter Age\"\n        name=\"age\"\n        value={rules.age}\n        onChange={handleChange}\n        required\n        className=\"task-input\"\n      />\n      \n      <input\n        type=\"text\"\n        placeholder=\"Enter Address...\"\n        name=\"address\"\n        value={rules.address}\n        onChange={handleChange}\n        required\n        className=\"task-input\"\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Enter Zip Code\"\n        name=\"zip\"\n        value={rules.zip}\n        onChange={handleChange}\n        required\n        className=\"task-input\"\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Enter Product...\"\n        name=\"product\"\n        value={rules.product}\n        onChange={handleChange}\n        required\n        className=\"task-input\"\n      />\n      <div className=\"buttons\">\n        <button type=\"submit\" className=\"btn add-task-btn\">\n          {editItem ? \"Edit Rules\" : \"Add Rules\"}\n        </button>\n        <button className=\"btn clear-btn\" onClick={clearList}>\n          Clear\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default TaskForm;\n","import React from 'react'\n\nconst Header = () => {\n  return (\n    <div className='header'>\n      <h1>Rules Manager</h1>\n    </div>\n  )\n}\n\nexport default Header\n","import React from \"react\";\nimport TaskListContextProvider from \"../contexts/TaskListContext\";\nimport TaskList from \"./TaskList\";\nimport TaskForm from \"./TaskForm\";\n\nimport \"../App.css\";\nimport Header from \"./Header\";\n\nconst App = () => {\n  return (\n    <TaskListContextProvider>\n      <div className=\"container\">\n        <div className=\"app-wrapper\">\n          <Header />\n          <div className=\"main\">\n            <TaskForm />\n            <TaskList />\n          </div>\n        </div>\n      </div>\n    </TaskListContextProvider>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}